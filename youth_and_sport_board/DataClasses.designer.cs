#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace youth_and_sport_board
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="akysb_data_base")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertAccountType(AccountType instance);
    partial void UpdateAccountType(AccountType instance);
    partial void DeleteAccountType(AccountType instance);
    partial void Inserte_catagory(e_catagory instance);
    partial void Updatee_catagory(e_catagory instance);
    partial void Deletee_catagory(e_catagory instance);
    partial void Inserte_login(e_login instance);
    partial void Updatee_login(e_login instance);
    partial void Deletee_login(e_login instance);
    partial void Inserte_logintype(e_logintype instance);
    partial void Updatee_logintype(e_logintype instance);
    partial void Deletee_logintype(e_logintype instance);
    partial void Insertevent_register(event_register instance);
    partial void Updateevent_register(event_register instance);
    partial void Deleteevent_register(event_register instance);
    partial void InsertJDetail(JDetail instance);
    partial void UpdateJDetail(JDetail instance);
    partial void DeleteJDetail(JDetail instance);
    partial void InsertJEntry(JEntry instance);
    partial void UpdateJEntry(JEntry instance);
    partial void DeleteJEntry(JEntry instance);
    partial void Insertm_notification(m_notification instance);
    partial void Updatem_notification(m_notification instance);
    partial void Deletem_notification(m_notification instance);
    partial void Insertmeeting_schedule(meeting_schedule instance);
    partial void Updatemeeting_schedule(meeting_schedule instance);
    partial void Deletemeeting_schedule(meeting_schedule instance);
    partial void Insertorg_Address(org_Address instance);
    partial void Updateorg_Address(org_Address instance);
    partial void Deleteorg_Address(org_Address instance);
    partial void Insertorganization(organization instance);
    partial void Updateorganization(organization instance);
    partial void Deleteorganization(organization instance);
    partial void Insertpage(page instance);
    partial void Updatepage(page instance);
    partial void Deletepage(page instance);
    partial void Insertpagesacess(pagesacess instance);
    partial void Updatepagesacess(pagesacess instance);
    partial void Deletepagesacess(pagesacess instance);
    partial void Insertpart_event_register(part_event_register instance);
    partial void Updatepart_event_register(part_event_register instance);
    partial void Deletepart_event_register(part_event_register instance);
    partial void Insertparticipant(participant instance);
    partial void Updateparticipant(participant instance);
    partial void Deleteparticipant(participant instance);
    partial void Insertsport_equip(sport_equip instance);
    partial void Updatesport_equip(sport_equip instance);
    partial void Deletesport_equip(sport_equip instance);
    partial void Inserte_sport_equip(e_sport_equip instance);
    partial void Updatee_sport_equip(e_sport_equip instance);
    partial void Deletee_sport_equip(e_sport_equip instance);
    partial void Insertpart_contact(part_contact instance);
    partial void Updatepart_contact(part_contact instance);
    partial void Deletepart_contact(part_contact instance);
    partial void Insertorg_contact(org_contact instance);
    partial void Updateorg_contact(org_contact instance);
    partial void Deleteorg_contact(org_contact instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["akysb_data_baseConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<AccountType> AccountTypes
		{
			get
			{
				return this.GetTable<AccountType>();
			}
		}
		
		public System.Data.Linq.Table<e_catagory> e_catagories
		{
			get
			{
				return this.GetTable<e_catagory>();
			}
		}
		
		public System.Data.Linq.Table<e_login> e_logins
		{
			get
			{
				return this.GetTable<e_login>();
			}
		}
		
		public System.Data.Linq.Table<e_logintype> e_logintypes
		{
			get
			{
				return this.GetTable<e_logintype>();
			}
		}
		
		public System.Data.Linq.Table<event_register> event_registers
		{
			get
			{
				return this.GetTable<event_register>();
			}
		}
		
		public System.Data.Linq.Table<JDetail> JDetails
		{
			get
			{
				return this.GetTable<JDetail>();
			}
		}
		
		public System.Data.Linq.Table<JEntry> JEntries
		{
			get
			{
				return this.GetTable<JEntry>();
			}
		}
		
		public System.Data.Linq.Table<m_notification> m_notifications
		{
			get
			{
				return this.GetTable<m_notification>();
			}
		}
		
		public System.Data.Linq.Table<meeting_schedule> meeting_schedules
		{
			get
			{
				return this.GetTable<meeting_schedule>();
			}
		}
		
		public System.Data.Linq.Table<org_Address> org_Addresses
		{
			get
			{
				return this.GetTable<org_Address>();
			}
		}
		
		public System.Data.Linq.Table<organization> organizations
		{
			get
			{
				return this.GetTable<organization>();
			}
		}
		
		public System.Data.Linq.Table<page> pages
		{
			get
			{
				return this.GetTable<page>();
			}
		}
		
		public System.Data.Linq.Table<pagesacess> pagesacesses
		{
			get
			{
				return this.GetTable<pagesacess>();
			}
		}
		
		public System.Data.Linq.Table<part_event_register> part_event_registers
		{
			get
			{
				return this.GetTable<part_event_register>();
			}
		}
		
		public System.Data.Linq.Table<participant> participants
		{
			get
			{
				return this.GetTable<participant>();
			}
		}
		
		public System.Data.Linq.Table<sport_equip> sport_equips
		{
			get
			{
				return this.GetTable<sport_equip>();
			}
		}
		
		public System.Data.Linq.Table<e_sport_equip> e_sport_equips
		{
			get
			{
				return this.GetTable<e_sport_equip>();
			}
		}
		
		public System.Data.Linq.Table<part_contact> part_contacts
		{
			get
			{
				return this.GetTable<part_contact>();
			}
		}
		
		public System.Data.Linq.Table<org_contact> org_contacts
		{
			get
			{
				return this.GetTable<org_contact>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spGetCategoryFromID")]
		public ISingleResult<spGetCategoryFromIDResult> spGetCategoryFromID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CID", DbType="Int")] System.Nullable<int> cID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cID);
			return ((ISingleResult<spGetCategoryFromIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spGetEventRegisterFromIDs")]
		public ISingleResult<spGetEventRegisterFromIDsResult> spGetEventRegisterFromIDs([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CID", DbType="Int")] System.Nullable<int> cID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cID);
			return ((ISingleResult<spGetEventRegisterFromIDsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spGetJournalEntryDetail")]
		public ISingleResult<spGetJournalEntryDetailResult> spGetJournalEntryDetail()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<spGetJournalEntryDetailResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spGetlogincheckFromID")]
		public ISingleResult<spGetlogincheckFromIDResult> spGetlogincheckFromID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string userID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, password);
			return ((ISingleResult<spGetlogincheckFromIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spGetloginFromID")]
		public ISingleResult<spGetloginFromIDResult> spGetloginFromID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CID", DbType="Int")] System.Nullable<int> cID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cID);
			return ((ISingleResult<spGetloginFromIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spGetlogintypeFromID")]
		public ISingleResult<spGetlogintypeFromIDResult> spGetlogintypeFromID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CID", DbType="Int")] System.Nullable<int> cID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cID);
			return ((ISingleResult<spGetlogintypeFromIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spGetOrganizationFromIDs")]
		public ISingleResult<spGetOrganizationFromIDsResult> spGetOrganizationFromIDs([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CID", DbType="Int")] System.Nullable<int> cID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cID);
			return ((ISingleResult<spGetOrganizationFromIDsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spGetorgcontactFromID")]
		public ISingleResult<spGetorgcontactFromIDResult> spGetorgcontactFromID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CID", DbType="Int")] System.Nullable<int> cID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cID);
			return ((ISingleResult<spGetorgcontactFromIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spGetpassacessFromID")]
		public ISingleResult<spGetpassacessFromIDResult> spGetpassacessFromID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CID", DbType="Int")] System.Nullable<int> cID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cID);
			return ((ISingleResult<spGetpassacessFromIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spGetpagesFromID")]
		public ISingleResult<spGetpagesFromIDResult> spGetpagesFromID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CID", DbType="Int")] System.Nullable<int> cID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cID);
			return ((ISingleResult<spGetpagesFromIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spGetPerticipentFromIDs")]
		public ISingleResult<spGetPerticipentFromIDsResult> spGetPerticipentFromIDs([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CID", DbType="Int")] System.Nullable<int> cID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cID);
			return ((ISingleResult<spGetPerticipentFromIDsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spGetSporteqFromID")]
		public ISingleResult<spGetSporteqFromIDResult> spGetSporteqFromID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CID", DbType="Int")] System.Nullable<int> cID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cID);
			return ((ISingleResult<spGetSporteqFromIDResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AID;
		
		private string _AccountNo;
		
		private string _AccountName;
		
		private int _AccountTypeID;
		
		private bool _IsActive;
		
		private System.Nullable<decimal> _OpeningBalance;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _OrganizationID;
		
		private EntitySet<JDetail> _JDetails;
		
		private EntityRef<AccountType> _AccountType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAIDChanging(int value);
    partial void OnAIDChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnAccountNameChanging(string value);
    partial void OnAccountNameChanged();
    partial void OnAccountTypeIDChanging(int value);
    partial void OnAccountTypeIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnOpeningBalanceChanging(System.Nullable<decimal> value);
    partial void OnOpeningBalanceChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnOrganizationIDChanging(System.Nullable<int> value);
    partial void OnOrganizationIDChanged();
    #endregion
		
		public Account()
		{
			this._JDetails = new EntitySet<JDetail>(new Action<JDetail>(this.attach_JDetails), new Action<JDetail>(this.detach_JDetails));
			this._AccountType = default(EntityRef<AccountType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AID
		{
			get
			{
				return this._AID;
			}
			set
			{
				if ((this._AID != value))
				{
					this.OnAIDChanging(value);
					this.SendPropertyChanging();
					this._AID = value;
					this.SendPropertyChanged("AID");
					this.OnAIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="NChar(15) NOT NULL", CanBeNull=false)]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this.OnAccountNameChanging(value);
					this.SendPropertyChanging();
					this._AccountName = value;
					this.SendPropertyChanged("AccountName");
					this.OnAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountTypeID", DbType="Int NOT NULL")]
		public int AccountTypeID
		{
			get
			{
				return this._AccountTypeID;
			}
			set
			{
				if ((this._AccountTypeID != value))
				{
					if (this._AccountType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AccountTypeID = value;
					this.SendPropertyChanged("AccountTypeID");
					this.OnAccountTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpeningBalance", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> OpeningBalance
		{
			get
			{
				return this._OpeningBalance;
			}
			set
			{
				if ((this._OpeningBalance != value))
				{
					this.OnOpeningBalanceChanging(value);
					this.SendPropertyChanging();
					this._OpeningBalance = value;
					this.SendPropertyChanged("OpeningBalance");
					this.OnOpeningBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationID", DbType="Int")]
		public System.Nullable<int> OrganizationID
		{
			get
			{
				return this._OrganizationID;
			}
			set
			{
				if ((this._OrganizationID != value))
				{
					this.OnOrganizationIDChanging(value);
					this.SendPropertyChanging();
					this._OrganizationID = value;
					this.SendPropertyChanged("OrganizationID");
					this.OnOrganizationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_JDetail", Storage="_JDetails", ThisKey="AID", OtherKey="VoucherNo")]
		public EntitySet<JDetail> JDetails
		{
			get
			{
				return this._JDetails;
			}
			set
			{
				this._JDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccountType_Account", Storage="_AccountType", ThisKey="AccountTypeID", OtherKey="AccountTypeID", IsForeignKey=true)]
		public AccountType AccountType
		{
			get
			{
				return this._AccountType.Entity;
			}
			set
			{
				AccountType previousValue = this._AccountType.Entity;
				if (((previousValue != value) 
							|| (this._AccountType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountType.Entity = null;
						previousValue.Accounts.Remove(this);
					}
					this._AccountType.Entity = value;
					if ((value != null))
					{
						value.Accounts.Add(this);
						this._AccountTypeID = value.AccountTypeID;
					}
					else
					{
						this._AccountTypeID = default(int);
					}
					this.SendPropertyChanged("AccountType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JDetails(JDetail entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_JDetails(JDetail entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountType")]
	public partial class AccountType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountTypeID;
		
		private string _AccountType1;
		
		private string _Detail;
		
		private EntitySet<Account> _Accounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountTypeIDChanging(int value);
    partial void OnAccountTypeIDChanged();
    partial void OnAccountType1Changing(string value);
    partial void OnAccountType1Changed();
    partial void OnDetailChanging(string value);
    partial void OnDetailChanged();
    #endregion
		
		public AccountType()
		{
			this._Accounts = new EntitySet<Account>(new Action<Account>(this.attach_Accounts), new Action<Account>(this.detach_Accounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccountTypeID
		{
			get
			{
				return this._AccountTypeID;
			}
			set
			{
				if ((this._AccountTypeID != value))
				{
					this.OnAccountTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AccountTypeID = value;
					this.SendPropertyChanged("AccountTypeID");
					this.OnAccountTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="AccountType", Storage="_AccountType1", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string AccountType1
		{
			get
			{
				return this._AccountType1;
			}
			set
			{
				if ((this._AccountType1 != value))
				{
					this.OnAccountType1Changing(value);
					this.SendPropertyChanging();
					this._AccountType1 = value;
					this.SendPropertyChanged("AccountType1");
					this.OnAccountType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detail", DbType="VarChar(MAX)")]
		public string Detail
		{
			get
			{
				return this._Detail;
			}
			set
			{
				if ((this._Detail != value))
				{
					this.OnDetailChanging(value);
					this.SendPropertyChanging();
					this._Detail = value;
					this.SendPropertyChanged("Detail");
					this.OnDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccountType_Account", Storage="_Accounts", ThisKey="AccountTypeID", OtherKey="AccountTypeID")]
		public EntitySet<Account> Accounts
		{
			get
			{
				return this._Accounts;
			}
			set
			{
				this._Accounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.AccountType = this;
		}
		
		private void detach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.AccountType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.e_catagory")]
	public partial class e_catagory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _e_cataid;
		
		private string _e_cat_name;
		
		private EntitySet<event_register> _event_registers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void One_cataidChanging(int value);
    partial void One_cataidChanged();
    partial void One_cat_nameChanging(string value);
    partial void One_cat_nameChanged();
    #endregion
		
		public e_catagory()
		{
			this._event_registers = new EntitySet<event_register>(new Action<event_register>(this.attach_event_registers), new Action<event_register>(this.detach_event_registers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_cataid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int e_cataid
		{
			get
			{
				return this._e_cataid;
			}
			set
			{
				if ((this._e_cataid != value))
				{
					this.One_cataidChanging(value);
					this.SendPropertyChanging();
					this._e_cataid = value;
					this.SendPropertyChanged("e_cataid");
					this.One_cataidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_cat_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string e_cat_name
		{
			get
			{
				return this._e_cat_name;
			}
			set
			{
				if ((this._e_cat_name != value))
				{
					this.One_cat_nameChanging(value);
					this.SendPropertyChanging();
					this._e_cat_name = value;
					this.SendPropertyChanged("e_cat_name");
					this.One_cat_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="e_catagory_event_register", Storage="_event_registers", ThisKey="e_cataid", OtherKey="e_cataid")]
		public EntitySet<event_register> event_registers
		{
			get
			{
				return this._event_registers;
			}
			set
			{
				this._event_registers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_event_registers(event_register entity)
		{
			this.SendPropertyChanging();
			entity.e_catagory = this;
		}
		
		private void detach_event_registers(event_register entity)
		{
			this.SendPropertyChanging();
			entity.e_catagory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.e_login")]
	public partial class e_login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _loginid;
		
		private int _logintypeid;
		
		private string _firstname;
		
		private string _lastname;
		
		private string _username;
		
		private string _password;
		
		private string _emailadd;
		
		private bool _Isactive;
		
		private string _gender;
		
		private string _contactno;
		
		private string _l_address;
		
		private System.Nullable<System.DateTime> _l_dob;
		
		private EntitySet<event_register> _event_registers;
		
		private EntityRef<e_logintype> _e_logintype;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnloginidChanging(int value);
    partial void OnloginidChanged();
    partial void OnlogintypeidChanging(int value);
    partial void OnlogintypeidChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnemailaddChanging(string value);
    partial void OnemailaddChanged();
    partial void OnIsactiveChanging(bool value);
    partial void OnIsactiveChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OncontactnoChanging(string value);
    partial void OncontactnoChanged();
    partial void Onl_addressChanging(string value);
    partial void Onl_addressChanged();
    partial void Onl_dobChanging(System.Nullable<System.DateTime> value);
    partial void Onl_dobChanged();
    #endregion
		
		public e_login()
		{
			this._event_registers = new EntitySet<event_register>(new Action<event_register>(this.attach_event_registers), new Action<event_register>(this.detach_event_registers));
			this._e_logintype = default(EntityRef<e_logintype>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loginid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int loginid
		{
			get
			{
				return this._loginid;
			}
			set
			{
				if ((this._loginid != value))
				{
					this.OnloginidChanging(value);
					this.SendPropertyChanging();
					this._loginid = value;
					this.SendPropertyChanged("loginid");
					this.OnloginidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logintypeid", DbType="Int NOT NULL")]
		public int logintypeid
		{
			get
			{
				return this._logintypeid;
			}
			set
			{
				if ((this._logintypeid != value))
				{
					if (this._e_logintype.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlogintypeidChanging(value);
					this.SendPropertyChanging();
					this._logintypeid = value;
					this.SendPropertyChanged("logintypeid");
					this.OnlogintypeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this.OnfirstnameChanging(value);
					this.SendPropertyChanging();
					this._firstname = value;
					this.SendPropertyChanged("firstname");
					this.OnfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this.OnlastnameChanging(value);
					this.SendPropertyChanging();
					this._lastname = value;
					this.SendPropertyChanged("lastname");
					this.OnlastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailadd", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string emailadd
		{
			get
			{
				return this._emailadd;
			}
			set
			{
				if ((this._emailadd != value))
				{
					this.OnemailaddChanging(value);
					this.SendPropertyChanging();
					this._emailadd = value;
					this.SendPropertyChanged("emailadd");
					this.OnemailaddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Isactive", DbType="Bit NOT NULL")]
		public bool Isactive
		{
			get
			{
				return this._Isactive;
			}
			set
			{
				if ((this._Isactive != value))
				{
					this.OnIsactiveChanging(value);
					this.SendPropertyChanging();
					this._Isactive = value;
					this.SendPropertyChanged("Isactive");
					this.OnIsactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(10)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactno", DbType="VarChar(18)")]
		public string contactno
		{
			get
			{
				return this._contactno;
			}
			set
			{
				if ((this._contactno != value))
				{
					this.OncontactnoChanging(value);
					this.SendPropertyChanging();
					this._contactno = value;
					this.SendPropertyChanged("contactno");
					this.OncontactnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_l_address", DbType="VarChar(100)")]
		public string l_address
		{
			get
			{
				return this._l_address;
			}
			set
			{
				if ((this._l_address != value))
				{
					this.Onl_addressChanging(value);
					this.SendPropertyChanging();
					this._l_address = value;
					this.SendPropertyChanged("l_address");
					this.Onl_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_l_dob", DbType="Date")]
		public System.Nullable<System.DateTime> l_dob
		{
			get
			{
				return this._l_dob;
			}
			set
			{
				if ((this._l_dob != value))
				{
					this.Onl_dobChanging(value);
					this.SendPropertyChanging();
					this._l_dob = value;
					this.SendPropertyChanged("l_dob");
					this.Onl_dobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="e_login_event_register", Storage="_event_registers", ThisKey="loginid", OtherKey="e_loginid")]
		public EntitySet<event_register> event_registers
		{
			get
			{
				return this._event_registers;
			}
			set
			{
				this._event_registers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="e_logintype_e_login", Storage="_e_logintype", ThisKey="logintypeid", OtherKey="logintypeid", IsForeignKey=true)]
		public e_logintype e_logintype
		{
			get
			{
				return this._e_logintype.Entity;
			}
			set
			{
				e_logintype previousValue = this._e_logintype.Entity;
				if (((previousValue != value) 
							|| (this._e_logintype.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._e_logintype.Entity = null;
						previousValue.e_logins.Remove(this);
					}
					this._e_logintype.Entity = value;
					if ((value != null))
					{
						value.e_logins.Add(this);
						this._logintypeid = value.logintypeid;
					}
					else
					{
						this._logintypeid = default(int);
					}
					this.SendPropertyChanged("e_logintype");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_event_registers(event_register entity)
		{
			this.SendPropertyChanging();
			entity.e_login = this;
		}
		
		private void detach_event_registers(event_register entity)
		{
			this.SendPropertyChanging();
			entity.e_login = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.e_logintype")]
	public partial class e_logintype : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _logintypeid;
		
		private string _typename;
		
		private EntitySet<e_login> _e_logins;
		
		private EntitySet<pagesacess> _pagesacesses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnlogintypeidChanging(int value);
    partial void OnlogintypeidChanged();
    partial void OntypenameChanging(string value);
    partial void OntypenameChanged();
    #endregion
		
		public e_logintype()
		{
			this._e_logins = new EntitySet<e_login>(new Action<e_login>(this.attach_e_logins), new Action<e_login>(this.detach_e_logins));
			this._pagesacesses = new EntitySet<pagesacess>(new Action<pagesacess>(this.attach_pagesacesses), new Action<pagesacess>(this.detach_pagesacesses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logintypeid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int logintypeid
		{
			get
			{
				return this._logintypeid;
			}
			set
			{
				if ((this._logintypeid != value))
				{
					this.OnlogintypeidChanging(value);
					this.SendPropertyChanging();
					this._logintypeid = value;
					this.SendPropertyChanged("logintypeid");
					this.OnlogintypeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typename", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string typename
		{
			get
			{
				return this._typename;
			}
			set
			{
				if ((this._typename != value))
				{
					this.OntypenameChanging(value);
					this.SendPropertyChanging();
					this._typename = value;
					this.SendPropertyChanged("typename");
					this.OntypenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="e_logintype_e_login", Storage="_e_logins", ThisKey="logintypeid", OtherKey="logintypeid")]
		public EntitySet<e_login> e_logins
		{
			get
			{
				return this._e_logins;
			}
			set
			{
				this._e_logins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="e_logintype_pagesacess", Storage="_pagesacesses", ThisKey="logintypeid", OtherKey="logintypeid")]
		public EntitySet<pagesacess> pagesacesses
		{
			get
			{
				return this._pagesacesses;
			}
			set
			{
				this._pagesacesses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_e_logins(e_login entity)
		{
			this.SendPropertyChanging();
			entity.e_logintype = this;
		}
		
		private void detach_e_logins(e_login entity)
		{
			this.SendPropertyChanging();
			entity.e_logintype = null;
		}
		
		private void attach_pagesacesses(pagesacess entity)
		{
			this.SendPropertyChanging();
			entity.e_logintype = this;
		}
		
		private void detach_pagesacesses(pagesacess entity)
		{
			this.SendPropertyChanging();
			entity.e_logintype = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.event_register")]
	public partial class event_register : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _eventid;
		
		private int _e_orgid;
		
		private int _e_loginid;
		
		private System.DateTime _e_currentdate;
		
		private string _e_name;
		
		private System.DateTime _e_eventdate;
		
		private string _e_orgpersonname;
		
		private decimal _e_amount;
		
		private string _e_description;
		
		private string _e_location;
		
		private bool _e_isaprove;
		
		private int _e_cataid;
		
		private System.Nullable<decimal> _EventParticipationFee;
		
		private string _e_service;
		
		private EntitySet<part_event_register> _part_event_registers;
		
		private EntitySet<e_sport_equip> _e_sport_equips;
		
		private EntityRef<e_catagory> _e_catagory;
		
		private EntityRef<e_login> _e_login;
		
		private EntityRef<organization> _organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OneventidChanging(int value);
    partial void OneventidChanged();
    partial void One_orgidChanging(int value);
    partial void One_orgidChanged();
    partial void One_loginidChanging(int value);
    partial void One_loginidChanged();
    partial void One_currentdateChanging(System.DateTime value);
    partial void One_currentdateChanged();
    partial void One_nameChanging(string value);
    partial void One_nameChanged();
    partial void One_eventdateChanging(System.DateTime value);
    partial void One_eventdateChanged();
    partial void One_orgpersonnameChanging(string value);
    partial void One_orgpersonnameChanged();
    partial void One_amountChanging(decimal value);
    partial void One_amountChanged();
    partial void One_descriptionChanging(string value);
    partial void One_descriptionChanged();
    partial void One_locationChanging(string value);
    partial void One_locationChanged();
    partial void One_isaproveChanging(bool value);
    partial void One_isaproveChanged();
    partial void One_cataidChanging(int value);
    partial void One_cataidChanged();
    partial void OnEventParticipationFeeChanging(System.Nullable<decimal> value);
    partial void OnEventParticipationFeeChanged();
    partial void One_serviceChanging(string value);
    partial void One_serviceChanged();
    #endregion
		
		public event_register()
		{
			this._part_event_registers = new EntitySet<part_event_register>(new Action<part_event_register>(this.attach_part_event_registers), new Action<part_event_register>(this.detach_part_event_registers));
			this._e_sport_equips = new EntitySet<e_sport_equip>(new Action<e_sport_equip>(this.attach_e_sport_equips), new Action<e_sport_equip>(this.detach_e_sport_equips));
			this._e_catagory = default(EntityRef<e_catagory>);
			this._e_login = default(EntityRef<e_login>);
			this._organization = default(EntityRef<organization>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int eventid
		{
			get
			{
				return this._eventid;
			}
			set
			{
				if ((this._eventid != value))
				{
					this.OneventidChanging(value);
					this.SendPropertyChanging();
					this._eventid = value;
					this.SendPropertyChanged("eventid");
					this.OneventidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_orgid", DbType="Int NOT NULL")]
		public int e_orgid
		{
			get
			{
				return this._e_orgid;
			}
			set
			{
				if ((this._e_orgid != value))
				{
					if (this._organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.One_orgidChanging(value);
					this.SendPropertyChanging();
					this._e_orgid = value;
					this.SendPropertyChanged("e_orgid");
					this.One_orgidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_loginid", DbType="Int NOT NULL")]
		public int e_loginid
		{
			get
			{
				return this._e_loginid;
			}
			set
			{
				if ((this._e_loginid != value))
				{
					if (this._e_login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.One_loginidChanging(value);
					this.SendPropertyChanging();
					this._e_loginid = value;
					this.SendPropertyChanged("e_loginid");
					this.One_loginidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_currentdate", DbType="DateTime NOT NULL")]
		public System.DateTime e_currentdate
		{
			get
			{
				return this._e_currentdate;
			}
			set
			{
				if ((this._e_currentdate != value))
				{
					this.One_currentdateChanging(value);
					this.SendPropertyChanging();
					this._e_currentdate = value;
					this.SendPropertyChanged("e_currentdate");
					this.One_currentdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string e_name
		{
			get
			{
				return this._e_name;
			}
			set
			{
				if ((this._e_name != value))
				{
					this.One_nameChanging(value);
					this.SendPropertyChanging();
					this._e_name = value;
					this.SendPropertyChanged("e_name");
					this.One_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_eventdate", DbType="DateTime NOT NULL")]
		public System.DateTime e_eventdate
		{
			get
			{
				return this._e_eventdate;
			}
			set
			{
				if ((this._e_eventdate != value))
				{
					this.One_eventdateChanging(value);
					this.SendPropertyChanging();
					this._e_eventdate = value;
					this.SendPropertyChanged("e_eventdate");
					this.One_eventdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_orgpersonname", DbType="VarChar(50)")]
		public string e_orgpersonname
		{
			get
			{
				return this._e_orgpersonname;
			}
			set
			{
				if ((this._e_orgpersonname != value))
				{
					this.One_orgpersonnameChanging(value);
					this.SendPropertyChanging();
					this._e_orgpersonname = value;
					this.SendPropertyChanged("e_orgpersonname");
					this.One_orgpersonnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal e_amount
		{
			get
			{
				return this._e_amount;
			}
			set
			{
				if ((this._e_amount != value))
				{
					this.One_amountChanging(value);
					this.SendPropertyChanging();
					this._e_amount = value;
					this.SendPropertyChanged("e_amount");
					this.One_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string e_description
		{
			get
			{
				return this._e_description;
			}
			set
			{
				if ((this._e_description != value))
				{
					this.One_descriptionChanging(value);
					this.SendPropertyChanging();
					this._e_description = value;
					this.SendPropertyChanged("e_description");
					this.One_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_location", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string e_location
		{
			get
			{
				return this._e_location;
			}
			set
			{
				if ((this._e_location != value))
				{
					this.One_locationChanging(value);
					this.SendPropertyChanging();
					this._e_location = value;
					this.SendPropertyChanged("e_location");
					this.One_locationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_isaprove", DbType="Bit NOT NULL")]
		public bool e_isaprove
		{
			get
			{
				return this._e_isaprove;
			}
			set
			{
				if ((this._e_isaprove != value))
				{
					this.One_isaproveChanging(value);
					this.SendPropertyChanging();
					this._e_isaprove = value;
					this.SendPropertyChanged("e_isaprove");
					this.One_isaproveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_cataid", DbType="Int NOT NULL")]
		public int e_cataid
		{
			get
			{
				return this._e_cataid;
			}
			set
			{
				if ((this._e_cataid != value))
				{
					if (this._e_catagory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.One_cataidChanging(value);
					this.SendPropertyChanging();
					this._e_cataid = value;
					this.SendPropertyChanged("e_cataid");
					this.One_cataidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventParticipationFee", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> EventParticipationFee
		{
			get
			{
				return this._EventParticipationFee;
			}
			set
			{
				if ((this._EventParticipationFee != value))
				{
					this.OnEventParticipationFeeChanging(value);
					this.SendPropertyChanging();
					this._EventParticipationFee = value;
					this.SendPropertyChanged("EventParticipationFee");
					this.OnEventParticipationFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_service", DbType="VarChar(MAX)")]
		public string e_service
		{
			get
			{
				return this._e_service;
			}
			set
			{
				if ((this._e_service != value))
				{
					this.One_serviceChanging(value);
					this.SendPropertyChanging();
					this._e_service = value;
					this.SendPropertyChanged("e_service");
					this.One_serviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="event_register_part_event_register", Storage="_part_event_registers", ThisKey="eventid", OtherKey="eventid")]
		public EntitySet<part_event_register> part_event_registers
		{
			get
			{
				return this._part_event_registers;
			}
			set
			{
				this._part_event_registers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="event_register_e_sport_equip", Storage="_e_sport_equips", ThisKey="eventid", OtherKey="eventid")]
		public EntitySet<e_sport_equip> e_sport_equips
		{
			get
			{
				return this._e_sport_equips;
			}
			set
			{
				this._e_sport_equips.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="e_catagory_event_register", Storage="_e_catagory", ThisKey="e_cataid", OtherKey="e_cataid", IsForeignKey=true)]
		public e_catagory e_catagory
		{
			get
			{
				return this._e_catagory.Entity;
			}
			set
			{
				e_catagory previousValue = this._e_catagory.Entity;
				if (((previousValue != value) 
							|| (this._e_catagory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._e_catagory.Entity = null;
						previousValue.event_registers.Remove(this);
					}
					this._e_catagory.Entity = value;
					if ((value != null))
					{
						value.event_registers.Add(this);
						this._e_cataid = value.e_cataid;
					}
					else
					{
						this._e_cataid = default(int);
					}
					this.SendPropertyChanged("e_catagory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="e_login_event_register", Storage="_e_login", ThisKey="e_loginid", OtherKey="loginid", IsForeignKey=true)]
		public e_login e_login
		{
			get
			{
				return this._e_login.Entity;
			}
			set
			{
				e_login previousValue = this._e_login.Entity;
				if (((previousValue != value) 
							|| (this._e_login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._e_login.Entity = null;
						previousValue.event_registers.Remove(this);
					}
					this._e_login.Entity = value;
					if ((value != null))
					{
						value.event_registers.Add(this);
						this._e_loginid = value.loginid;
					}
					else
					{
						this._e_loginid = default(int);
					}
					this.SendPropertyChanged("e_login");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="organization_event_register", Storage="_organization", ThisKey="e_orgid", OtherKey="orgid", IsForeignKey=true)]
		public organization organization
		{
			get
			{
				return this._organization.Entity;
			}
			set
			{
				organization previousValue = this._organization.Entity;
				if (((previousValue != value) 
							|| (this._organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._organization.Entity = null;
						previousValue.event_registers.Remove(this);
					}
					this._organization.Entity = value;
					if ((value != null))
					{
						value.event_registers.Add(this);
						this._e_orgid = value.orgid;
					}
					else
					{
						this._e_orgid = default(int);
					}
					this.SendPropertyChanged("organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_part_event_registers(part_event_register entity)
		{
			this.SendPropertyChanging();
			entity.event_register = this;
		}
		
		private void detach_part_event_registers(part_event_register entity)
		{
			this.SendPropertyChanging();
			entity.event_register = null;
		}
		
		private void attach_e_sport_equips(e_sport_equip entity)
		{
			this.SendPropertyChanging();
			entity.event_register = this;
		}
		
		private void detach_e_sport_equips(e_sport_equip entity)
		{
			this.SendPropertyChanging();
			entity.event_register = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JDetail")]
	public partial class JDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JDetailID;
		
		private int _VoucherNo;
		
		private string _AccountNo;
		
		private int _JEntryID;
		
		private string _Memo;
		
		private decimal _Dr;
		
		private decimal _Cr;
		
		private System.Nullable<System.DateTime> _Date;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<JEntry> _JEntry;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJDetailIDChanging(int value);
    partial void OnJDetailIDChanged();
    partial void OnVoucherNoChanging(int value);
    partial void OnVoucherNoChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnJEntryIDChanging(int value);
    partial void OnJEntryIDChanged();
    partial void OnMemoChanging(string value);
    partial void OnMemoChanged();
    partial void OnDrChanging(decimal value);
    partial void OnDrChanged();
    partial void OnCrChanging(decimal value);
    partial void OnCrChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public JDetail()
		{
			this._Account = default(EntityRef<Account>);
			this._JEntry = default(EntityRef<JEntry>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JDetailID
		{
			get
			{
				return this._JDetailID;
			}
			set
			{
				if ((this._JDetailID != value))
				{
					this.OnJDetailIDChanging(value);
					this.SendPropertyChanging();
					this._JDetailID = value;
					this.SendPropertyChanged("JDetailID");
					this.OnJDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherNo", DbType="Int NOT NULL")]
		public int VoucherNo
		{
			get
			{
				return this._VoucherNo;
			}
			set
			{
				if ((this._VoucherNo != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVoucherNoChanging(value);
					this.SendPropertyChanging();
					this._VoucherNo = value;
					this.SendPropertyChanged("VoucherNo");
					this.OnVoucherNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="NChar(15) NOT NULL", CanBeNull=false)]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JEntryID", DbType="Int NOT NULL")]
		public int JEntryID
		{
			get
			{
				return this._JEntryID;
			}
			set
			{
				if ((this._JEntryID != value))
				{
					if (this._JEntry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJEntryIDChanging(value);
					this.SendPropertyChanging();
					this._JEntryID = value;
					this.SendPropertyChanged("JEntryID");
					this.OnJEntryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Memo
		{
			get
			{
				return this._Memo;
			}
			set
			{
				if ((this._Memo != value))
				{
					this.OnMemoChanging(value);
					this.SendPropertyChanging();
					this._Memo = value;
					this.SendPropertyChanged("Memo");
					this.OnMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dr", DbType="Decimal(18,2) NOT NULL")]
		public decimal Dr
		{
			get
			{
				return this._Dr;
			}
			set
			{
				if ((this._Dr != value))
				{
					this.OnDrChanging(value);
					this.SendPropertyChanging();
					this._Dr = value;
					this.SendPropertyChanged("Dr");
					this.OnDrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cr", DbType="Decimal(18,2) NOT NULL")]
		public decimal Cr
		{
			get
			{
				return this._Cr;
			}
			set
			{
				if ((this._Cr != value))
				{
					this.OnCrChanging(value);
					this.SendPropertyChanging();
					this._Cr = value;
					this.SendPropertyChanged("Cr");
					this.OnCrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_JDetail", Storage="_Account", ThisKey="VoucherNo", OtherKey="AID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.JDetails.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.JDetails.Add(this);
						this._VoucherNo = value.AID;
					}
					else
					{
						this._VoucherNo = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JEntry_JDetail", Storage="_JEntry", ThisKey="JEntryID", OtherKey="JEntryID", IsForeignKey=true)]
		public JEntry JEntry
		{
			get
			{
				return this._JEntry.Entity;
			}
			set
			{
				JEntry previousValue = this._JEntry.Entity;
				if (((previousValue != value) 
							|| (this._JEntry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JEntry.Entity = null;
						previousValue.JDetails.Remove(this);
					}
					this._JEntry.Entity = value;
					if ((value != null))
					{
						value.JDetails.Add(this);
						this._JEntryID = value.JEntryID;
					}
					else
					{
						this._JEntryID = default(int);
					}
					this.SendPropertyChanged("JEntry");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JEntry")]
	public partial class JEntry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JEntryID;
		
		private System.DateTime _Date;
		
		private EntitySet<JDetail> _JDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJEntryIDChanging(int value);
    partial void OnJEntryIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    #endregion
		
		public JEntry()
		{
			this._JDetails = new EntitySet<JDetail>(new Action<JDetail>(this.attach_JDetails), new Action<JDetail>(this.detach_JDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JEntryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JEntryID
		{
			get
			{
				return this._JEntryID;
			}
			set
			{
				if ((this._JEntryID != value))
				{
					this.OnJEntryIDChanging(value);
					this.SendPropertyChanging();
					this._JEntryID = value;
					this.SendPropertyChanged("JEntryID");
					this.OnJEntryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JEntry_JDetail", Storage="_JDetails", ThisKey="JEntryID", OtherKey="JEntryID")]
		public EntitySet<JDetail> JDetails
		{
			get
			{
				return this._JDetails;
			}
			set
			{
				this._JDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_JDetails(JDetail entity)
		{
			this.SendPropertyChanging();
			entity.JEntry = this;
		}
		
		private void detach_JDetails(JDetail entity)
		{
			this.SendPropertyChanging();
			entity.JEntry = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.m_notification")]
	public partial class m_notification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _notifiID;
		
		private int _loginid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnotifiIDChanging(int value);
    partial void OnnotifiIDChanged();
    partial void OnloginidChanging(int value);
    partial void OnloginidChanged();
    #endregion
		
		public m_notification()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notifiID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int notifiID
		{
			get
			{
				return this._notifiID;
			}
			set
			{
				if ((this._notifiID != value))
				{
					this.OnnotifiIDChanging(value);
					this.SendPropertyChanging();
					this._notifiID = value;
					this.SendPropertyChanged("notifiID");
					this.OnnotifiIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loginid", DbType="Int NOT NULL")]
		public int loginid
		{
			get
			{
				return this._loginid;
			}
			set
			{
				if ((this._loginid != value))
				{
					this.OnloginidChanging(value);
					this.SendPropertyChanging();
					this._loginid = value;
					this.SendPropertyChanged("loginid");
					this.OnloginidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.meeting_schedule")]
	public partial class meeting_schedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Meetingid;
		
		private string _m_subject;
		
		private System.DateTime _m_datetime;
		
		private string _location;
		
		private string _description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMeetingidChanging(int value);
    partial void OnMeetingidChanged();
    partial void Onm_subjectChanging(string value);
    partial void Onm_subjectChanged();
    partial void Onm_datetimeChanging(System.DateTime value);
    partial void Onm_datetimeChanged();
    partial void OnlocationChanging(string value);
    partial void OnlocationChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public meeting_schedule()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Meetingid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Meetingid
		{
			get
			{
				return this._Meetingid;
			}
			set
			{
				if ((this._Meetingid != value))
				{
					this.OnMeetingidChanging(value);
					this.SendPropertyChanging();
					this._Meetingid = value;
					this.SendPropertyChanged("Meetingid");
					this.OnMeetingidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m_subject", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string m_subject
		{
			get
			{
				return this._m_subject;
			}
			set
			{
				if ((this._m_subject != value))
				{
					this.Onm_subjectChanging(value);
					this.SendPropertyChanging();
					this._m_subject = value;
					this.SendPropertyChanged("m_subject");
					this.Onm_subjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_m_datetime", DbType="DateTime NOT NULL")]
		public System.DateTime m_datetime
		{
			get
			{
				return this._m_datetime;
			}
			set
			{
				if ((this._m_datetime != value))
				{
					this.Onm_datetimeChanging(value);
					this.SendPropertyChanging();
					this._m_datetime = value;
					this.SendPropertyChanged("m_datetime");
					this.Onm_datetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.org_Address")]
	public partial class org_Address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ADDID;
		
		private int _orgid;
		
		private string _Address;
		
		private EntityRef<organization> _organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnADDIDChanging(int value);
    partial void OnADDIDChanged();
    partial void OnorgidChanging(int value);
    partial void OnorgidChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
		
		public org_Address()
		{
			this._organization = default(EntityRef<organization>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ADDID
		{
			get
			{
				return this._ADDID;
			}
			set
			{
				if ((this._ADDID != value))
				{
					this.OnADDIDChanging(value);
					this.SendPropertyChanging();
					this._ADDID = value;
					this.SendPropertyChanged("ADDID");
					this.OnADDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orgid", DbType="Int NOT NULL")]
		public int orgid
		{
			get
			{
				return this._orgid;
			}
			set
			{
				if ((this._orgid != value))
				{
					if (this._organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnorgidChanging(value);
					this.SendPropertyChanging();
					this._orgid = value;
					this.SendPropertyChanged("orgid");
					this.OnorgidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="organization_org_Address", Storage="_organization", ThisKey="orgid", OtherKey="orgid", IsForeignKey=true)]
		public organization organization
		{
			get
			{
				return this._organization.Entity;
			}
			set
			{
				organization previousValue = this._organization.Entity;
				if (((previousValue != value) 
							|| (this._organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._organization.Entity = null;
						previousValue.org_Addresses.Remove(this);
					}
					this._organization.Entity = value;
					if ((value != null))
					{
						value.org_Addresses.Add(this);
						this._orgid = value.orgid;
					}
					else
					{
						this._orgid = default(int);
					}
					this.SendPropertyChanged("organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.organization")]
	public partial class organization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _orgid;
		
		private string _org_name;
		
		private EntitySet<event_register> _event_registers;
		
		private EntitySet<org_Address> _org_Addresses;
		
		private EntitySet<org_contact> _org_contacts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnorgidChanging(int value);
    partial void OnorgidChanged();
    partial void Onorg_nameChanging(string value);
    partial void Onorg_nameChanged();
    #endregion
		
		public organization()
		{
			this._event_registers = new EntitySet<event_register>(new Action<event_register>(this.attach_event_registers), new Action<event_register>(this.detach_event_registers));
			this._org_Addresses = new EntitySet<org_Address>(new Action<org_Address>(this.attach_org_Addresses), new Action<org_Address>(this.detach_org_Addresses));
			this._org_contacts = new EntitySet<org_contact>(new Action<org_contact>(this.attach_org_contacts), new Action<org_contact>(this.detach_org_contacts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orgid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int orgid
		{
			get
			{
				return this._orgid;
			}
			set
			{
				if ((this._orgid != value))
				{
					this.OnorgidChanging(value);
					this.SendPropertyChanging();
					this._orgid = value;
					this.SendPropertyChanged("orgid");
					this.OnorgidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_org_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string org_name
		{
			get
			{
				return this._org_name;
			}
			set
			{
				if ((this._org_name != value))
				{
					this.Onorg_nameChanging(value);
					this.SendPropertyChanging();
					this._org_name = value;
					this.SendPropertyChanged("org_name");
					this.Onorg_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="organization_event_register", Storage="_event_registers", ThisKey="orgid", OtherKey="e_orgid")]
		public EntitySet<event_register> event_registers
		{
			get
			{
				return this._event_registers;
			}
			set
			{
				this._event_registers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="organization_org_Address", Storage="_org_Addresses", ThisKey="orgid", OtherKey="orgid")]
		public EntitySet<org_Address> org_Addresses
		{
			get
			{
				return this._org_Addresses;
			}
			set
			{
				this._org_Addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="organization_org_contact", Storage="_org_contacts", ThisKey="orgid", OtherKey="orgid")]
		public EntitySet<org_contact> org_contacts
		{
			get
			{
				return this._org_contacts;
			}
			set
			{
				this._org_contacts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_event_registers(event_register entity)
		{
			this.SendPropertyChanging();
			entity.organization = this;
		}
		
		private void detach_event_registers(event_register entity)
		{
			this.SendPropertyChanging();
			entity.organization = null;
		}
		
		private void attach_org_Addresses(org_Address entity)
		{
			this.SendPropertyChanging();
			entity.organization = this;
		}
		
		private void detach_org_Addresses(org_Address entity)
		{
			this.SendPropertyChanging();
			entity.organization = null;
		}
		
		private void attach_org_contacts(org_contact entity)
		{
			this.SendPropertyChanging();
			entity.organization = this;
		}
		
		private void detach_org_contacts(org_contact entity)
		{
			this.SendPropertyChanging();
			entity.organization = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pages")]
	public partial class page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pageid;
		
		private string _pagename;
		
		private EntitySet<pagesacess> _pagesacesses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpageidChanging(int value);
    partial void OnpageidChanged();
    partial void OnpagenameChanging(string value);
    partial void OnpagenameChanged();
    #endregion
		
		public page()
		{
			this._pagesacesses = new EntitySet<pagesacess>(new Action<pagesacess>(this.attach_pagesacesses), new Action<pagesacess>(this.detach_pagesacesses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pageid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pageid
		{
			get
			{
				return this._pageid;
			}
			set
			{
				if ((this._pageid != value))
				{
					this.OnpageidChanging(value);
					this.SendPropertyChanging();
					this._pageid = value;
					this.SendPropertyChanged("pageid");
					this.OnpageidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pagename", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string pagename
		{
			get
			{
				return this._pagename;
			}
			set
			{
				if ((this._pagename != value))
				{
					this.OnpagenameChanging(value);
					this.SendPropertyChanging();
					this._pagename = value;
					this.SendPropertyChanged("pagename");
					this.OnpagenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="page_pagesacess", Storage="_pagesacesses", ThisKey="pageid", OtherKey="pageid")]
		public EntitySet<pagesacess> pagesacesses
		{
			get
			{
				return this._pagesacesses;
			}
			set
			{
				this._pagesacesses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_pagesacesses(pagesacess entity)
		{
			this.SendPropertyChanging();
			entity.page = this;
		}
		
		private void detach_pagesacesses(pagesacess entity)
		{
			this.SendPropertyChanging();
			entity.page = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pagesacess")]
	public partial class pagesacess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _p_acessid;
		
		private int _pageid;
		
		private int _logintypeid;
		
		private EntityRef<e_logintype> _e_logintype;
		
		private EntityRef<page> _page;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onp_acessidChanging(int value);
    partial void Onp_acessidChanged();
    partial void OnpageidChanging(int value);
    partial void OnpageidChanged();
    partial void OnlogintypeidChanging(int value);
    partial void OnlogintypeidChanged();
    #endregion
		
		public pagesacess()
		{
			this._e_logintype = default(EntityRef<e_logintype>);
			this._page = default(EntityRef<page>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_acessid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int p_acessid
		{
			get
			{
				return this._p_acessid;
			}
			set
			{
				if ((this._p_acessid != value))
				{
					this.Onp_acessidChanging(value);
					this.SendPropertyChanging();
					this._p_acessid = value;
					this.SendPropertyChanged("p_acessid");
					this.Onp_acessidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pageid", DbType="Int NOT NULL")]
		public int pageid
		{
			get
			{
				return this._pageid;
			}
			set
			{
				if ((this._pageid != value))
				{
					if (this._page.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpageidChanging(value);
					this.SendPropertyChanging();
					this._pageid = value;
					this.SendPropertyChanged("pageid");
					this.OnpageidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logintypeid", DbType="Int NOT NULL")]
		public int logintypeid
		{
			get
			{
				return this._logintypeid;
			}
			set
			{
				if ((this._logintypeid != value))
				{
					if (this._e_logintype.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlogintypeidChanging(value);
					this.SendPropertyChanging();
					this._logintypeid = value;
					this.SendPropertyChanged("logintypeid");
					this.OnlogintypeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="e_logintype_pagesacess", Storage="_e_logintype", ThisKey="logintypeid", OtherKey="logintypeid", IsForeignKey=true)]
		public e_logintype e_logintype
		{
			get
			{
				return this._e_logintype.Entity;
			}
			set
			{
				e_logintype previousValue = this._e_logintype.Entity;
				if (((previousValue != value) 
							|| (this._e_logintype.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._e_logintype.Entity = null;
						previousValue.pagesacesses.Remove(this);
					}
					this._e_logintype.Entity = value;
					if ((value != null))
					{
						value.pagesacesses.Add(this);
						this._logintypeid = value.logintypeid;
					}
					else
					{
						this._logintypeid = default(int);
					}
					this.SendPropertyChanged("e_logintype");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="page_pagesacess", Storage="_page", ThisKey="pageid", OtherKey="pageid", IsForeignKey=true)]
		public page page
		{
			get
			{
				return this._page.Entity;
			}
			set
			{
				page previousValue = this._page.Entity;
				if (((previousValue != value) 
							|| (this._page.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._page.Entity = null;
						previousValue.pagesacesses.Remove(this);
					}
					this._page.Entity = value;
					if ((value != null))
					{
						value.pagesacesses.Add(this);
						this._pageid = value.pageid;
					}
					else
					{
						this._pageid = default(int);
					}
					this.SendPropertyChanged("page");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.part_event_register")]
	public partial class part_event_register : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _prid;
		
		private int _eventid;
		
		private int _partid;
		
		private int _fee;
		
		private System.DateTime _currentdate;
		
		private string _description;
		
		private EntityRef<event_register> _event_register;
		
		private EntityRef<participant> _participant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpridChanging(int value);
    partial void OnpridChanged();
    partial void OneventidChanging(int value);
    partial void OneventidChanged();
    partial void OnpartidChanging(int value);
    partial void OnpartidChanged();
    partial void OnfeeChanging(int value);
    partial void OnfeeChanged();
    partial void OncurrentdateChanging(System.DateTime value);
    partial void OncurrentdateChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public part_event_register()
		{
			this._event_register = default(EntityRef<event_register>);
			this._participant = default(EntityRef<participant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int prid
		{
			get
			{
				return this._prid;
			}
			set
			{
				if ((this._prid != value))
				{
					this.OnpridChanging(value);
					this.SendPropertyChanging();
					this._prid = value;
					this.SendPropertyChanged("prid");
					this.OnpridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventid", DbType="Int NOT NULL")]
		public int eventid
		{
			get
			{
				return this._eventid;
			}
			set
			{
				if ((this._eventid != value))
				{
					if (this._event_register.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OneventidChanging(value);
					this.SendPropertyChanging();
					this._eventid = value;
					this.SendPropertyChanged("eventid");
					this.OneventidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partid", DbType="Int NOT NULL")]
		public int partid
		{
			get
			{
				return this._partid;
			}
			set
			{
				if ((this._partid != value))
				{
					if (this._participant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpartidChanging(value);
					this.SendPropertyChanging();
					this._partid = value;
					this.SendPropertyChanged("partid");
					this.OnpartidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fee", DbType="Int NOT NULL")]
		public int fee
		{
			get
			{
				return this._fee;
			}
			set
			{
				if ((this._fee != value))
				{
					this.OnfeeChanging(value);
					this.SendPropertyChanging();
					this._fee = value;
					this.SendPropertyChanged("fee");
					this.OnfeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currentdate", DbType="DateTime NOT NULL")]
		public System.DateTime currentdate
		{
			get
			{
				return this._currentdate;
			}
			set
			{
				if ((this._currentdate != value))
				{
					this.OncurrentdateChanging(value);
					this.SendPropertyChanging();
					this._currentdate = value;
					this.SendPropertyChanged("currentdate");
					this.OncurrentdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="event_register_part_event_register", Storage="_event_register", ThisKey="eventid", OtherKey="eventid", IsForeignKey=true)]
		public event_register event_register
		{
			get
			{
				return this._event_register.Entity;
			}
			set
			{
				event_register previousValue = this._event_register.Entity;
				if (((previousValue != value) 
							|| (this._event_register.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._event_register.Entity = null;
						previousValue.part_event_registers.Remove(this);
					}
					this._event_register.Entity = value;
					if ((value != null))
					{
						value.part_event_registers.Add(this);
						this._eventid = value.eventid;
					}
					else
					{
						this._eventid = default(int);
					}
					this.SendPropertyChanged("event_register");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="participant_part_event_register", Storage="_participant", ThisKey="partid", OtherKey="partid", IsForeignKey=true)]
		public participant participant
		{
			get
			{
				return this._participant.Entity;
			}
			set
			{
				participant previousValue = this._participant.Entity;
				if (((previousValue != value) 
							|| (this._participant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._participant.Entity = null;
						previousValue.part_event_registers.Remove(this);
					}
					this._participant.Entity = value;
					if ((value != null))
					{
						value.part_event_registers.Add(this);
						this._partid = value.partid;
					}
					else
					{
						this._partid = default(int);
					}
					this.SendPropertyChanged("participant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.participant")]
	public partial class participant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _partid;
		
		private string _p_first_name;
		
		private string _p_middle_name;
		
		private string _p_last_name;
		
		private string _p_email;
		
		private string _p_gender;
		
		private System.Nullable<System.DateTime> _p_dob;
		
		private string _p_address;
		
		private string _p_jamat_khana;
		
		private System.Nullable<int> _p_ptcl;
		
		private EntitySet<part_event_register> _part_event_registers;
		
		private EntitySet<part_contact> _part_contacts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpartidChanging(int value);
    partial void OnpartidChanged();
    partial void Onp_first_nameChanging(string value);
    partial void Onp_first_nameChanged();
    partial void Onp_middle_nameChanging(string value);
    partial void Onp_middle_nameChanged();
    partial void Onp_last_nameChanging(string value);
    partial void Onp_last_nameChanged();
    partial void Onp_emailChanging(string value);
    partial void Onp_emailChanged();
    partial void Onp_genderChanging(string value);
    partial void Onp_genderChanged();
    partial void Onp_dobChanging(System.Nullable<System.DateTime> value);
    partial void Onp_dobChanged();
    partial void Onp_addressChanging(string value);
    partial void Onp_addressChanged();
    partial void Onp_jamat_khanaChanging(string value);
    partial void Onp_jamat_khanaChanged();
    partial void Onp_ptclChanging(System.Nullable<int> value);
    partial void Onp_ptclChanged();
    #endregion
		
		public participant()
		{
			this._part_event_registers = new EntitySet<part_event_register>(new Action<part_event_register>(this.attach_part_event_registers), new Action<part_event_register>(this.detach_part_event_registers));
			this._part_contacts = new EntitySet<part_contact>(new Action<part_contact>(this.attach_part_contacts), new Action<part_contact>(this.detach_part_contacts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int partid
		{
			get
			{
				return this._partid;
			}
			set
			{
				if ((this._partid != value))
				{
					this.OnpartidChanging(value);
					this.SendPropertyChanging();
					this._partid = value;
					this.SendPropertyChanged("partid");
					this.OnpartidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_first_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string p_first_name
		{
			get
			{
				return this._p_first_name;
			}
			set
			{
				if ((this._p_first_name != value))
				{
					this.Onp_first_nameChanging(value);
					this.SendPropertyChanging();
					this._p_first_name = value;
					this.SendPropertyChanged("p_first_name");
					this.Onp_first_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_middle_name", DbType="VarChar(50)")]
		public string p_middle_name
		{
			get
			{
				return this._p_middle_name;
			}
			set
			{
				if ((this._p_middle_name != value))
				{
					this.Onp_middle_nameChanging(value);
					this.SendPropertyChanging();
					this._p_middle_name = value;
					this.SendPropertyChanged("p_middle_name");
					this.Onp_middle_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_last_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string p_last_name
		{
			get
			{
				return this._p_last_name;
			}
			set
			{
				if ((this._p_last_name != value))
				{
					this.Onp_last_nameChanging(value);
					this.SendPropertyChanging();
					this._p_last_name = value;
					this.SendPropertyChanged("p_last_name");
					this.Onp_last_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string p_email
		{
			get
			{
				return this._p_email;
			}
			set
			{
				if ((this._p_email != value))
				{
					this.Onp_emailChanging(value);
					this.SendPropertyChanging();
					this._p_email = value;
					this.SendPropertyChanged("p_email");
					this.Onp_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_gender", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string p_gender
		{
			get
			{
				return this._p_gender;
			}
			set
			{
				if ((this._p_gender != value))
				{
					this.Onp_genderChanging(value);
					this.SendPropertyChanging();
					this._p_gender = value;
					this.SendPropertyChanged("p_gender");
					this.Onp_genderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_dob", DbType="Date")]
		public System.Nullable<System.DateTime> p_dob
		{
			get
			{
				return this._p_dob;
			}
			set
			{
				if ((this._p_dob != value))
				{
					this.Onp_dobChanging(value);
					this.SendPropertyChanging();
					this._p_dob = value;
					this.SendPropertyChanged("p_dob");
					this.Onp_dobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_address", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string p_address
		{
			get
			{
				return this._p_address;
			}
			set
			{
				if ((this._p_address != value))
				{
					this.Onp_addressChanging(value);
					this.SendPropertyChanging();
					this._p_address = value;
					this.SendPropertyChanged("p_address");
					this.Onp_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_jamat_khana", DbType="VarChar(50)")]
		public string p_jamat_khana
		{
			get
			{
				return this._p_jamat_khana;
			}
			set
			{
				if ((this._p_jamat_khana != value))
				{
					this.Onp_jamat_khanaChanging(value);
					this.SendPropertyChanging();
					this._p_jamat_khana = value;
					this.SendPropertyChanged("p_jamat_khana");
					this.Onp_jamat_khanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_ptcl", DbType="Int")]
		public System.Nullable<int> p_ptcl
		{
			get
			{
				return this._p_ptcl;
			}
			set
			{
				if ((this._p_ptcl != value))
				{
					this.Onp_ptclChanging(value);
					this.SendPropertyChanging();
					this._p_ptcl = value;
					this.SendPropertyChanged("p_ptcl");
					this.Onp_ptclChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="participant_part_event_register", Storage="_part_event_registers", ThisKey="partid", OtherKey="partid")]
		public EntitySet<part_event_register> part_event_registers
		{
			get
			{
				return this._part_event_registers;
			}
			set
			{
				this._part_event_registers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="participant_part_contact", Storage="_part_contacts", ThisKey="partid", OtherKey="partid")]
		public EntitySet<part_contact> part_contacts
		{
			get
			{
				return this._part_contacts;
			}
			set
			{
				this._part_contacts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_part_event_registers(part_event_register entity)
		{
			this.SendPropertyChanging();
			entity.participant = this;
		}
		
		private void detach_part_event_registers(part_event_register entity)
		{
			this.SendPropertyChanging();
			entity.participant = null;
		}
		
		private void attach_part_contacts(part_contact entity)
		{
			this.SendPropertyChanging();
			entity.participant = this;
		}
		
		private void detach_part_contacts(part_contact entity)
		{
			this.SendPropertyChanging();
			entity.participant = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sport_equip")]
	public partial class sport_equip : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sporteqid;
		
		private string _eq_name;
		
		private int _t_quantity;
		
		private System.Nullable<int> _a_quantity;
		
		private EntitySet<e_sport_equip> _e_sport_equips;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsporteqidChanging(int value);
    partial void OnsporteqidChanged();
    partial void Oneq_nameChanging(string value);
    partial void Oneq_nameChanged();
    partial void Ont_quantityChanging(int value);
    partial void Ont_quantityChanged();
    partial void Ona_quantityChanging(System.Nullable<int> value);
    partial void Ona_quantityChanged();
    #endregion
		
		public sport_equip()
		{
			this._e_sport_equips = new EntitySet<e_sport_equip>(new Action<e_sport_equip>(this.attach_e_sport_equips), new Action<e_sport_equip>(this.detach_e_sport_equips));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sporteqid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int sporteqid
		{
			get
			{
				return this._sporteqid;
			}
			set
			{
				if ((this._sporteqid != value))
				{
					this.OnsporteqidChanging(value);
					this.SendPropertyChanging();
					this._sporteqid = value;
					this.SendPropertyChanged("sporteqid");
					this.OnsporteqidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eq_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string eq_name
		{
			get
			{
				return this._eq_name;
			}
			set
			{
				if ((this._eq_name != value))
				{
					this.Oneq_nameChanging(value);
					this.SendPropertyChanging();
					this._eq_name = value;
					this.SendPropertyChanged("eq_name");
					this.Oneq_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_t_quantity", DbType="Int NOT NULL")]
		public int t_quantity
		{
			get
			{
				return this._t_quantity;
			}
			set
			{
				if ((this._t_quantity != value))
				{
					this.Ont_quantityChanging(value);
					this.SendPropertyChanging();
					this._t_quantity = value;
					this.SendPropertyChanged("t_quantity");
					this.Ont_quantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_quantity", DbType="Int")]
		public System.Nullable<int> a_quantity
		{
			get
			{
				return this._a_quantity;
			}
			set
			{
				if ((this._a_quantity != value))
				{
					this.Ona_quantityChanging(value);
					this.SendPropertyChanging();
					this._a_quantity = value;
					this.SendPropertyChanged("a_quantity");
					this.Ona_quantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sport_equip_e_sport_equip", Storage="_e_sport_equips", ThisKey="sporteqid", OtherKey="sporteqid")]
		public EntitySet<e_sport_equip> e_sport_equips
		{
			get
			{
				return this._e_sport_equips;
			}
			set
			{
				this._e_sport_equips.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_e_sport_equips(e_sport_equip entity)
		{
			this.SendPropertyChanging();
			entity.sport_equip = this;
		}
		
		private void detach_e_sport_equips(e_sport_equip entity)
		{
			this.SendPropertyChanging();
			entity.sport_equip = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.e_sport_equip")]
	public partial class e_sport_equip : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _eventeqid;
		
		private int _sporteqid;
		
		private int _eventid;
		
		private int _quantity;
		
		private string _sp_return;
		
		private EntityRef<event_register> _event_register;
		
		private EntityRef<sport_equip> _sport_equip;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OneventeqidChanging(int value);
    partial void OneventeqidChanged();
    partial void OnsporteqidChanging(int value);
    partial void OnsporteqidChanged();
    partial void OneventidChanging(int value);
    partial void OneventidChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void Onsp_returnChanging(string value);
    partial void Onsp_returnChanged();
    #endregion
		
		public e_sport_equip()
		{
			this._event_register = default(EntityRef<event_register>);
			this._sport_equip = default(EntityRef<sport_equip>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventeqid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int eventeqid
		{
			get
			{
				return this._eventeqid;
			}
			set
			{
				if ((this._eventeqid != value))
				{
					this.OneventeqidChanging(value);
					this.SendPropertyChanging();
					this._eventeqid = value;
					this.SendPropertyChanged("eventeqid");
					this.OneventeqidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sporteqid", DbType="Int NOT NULL")]
		public int sporteqid
		{
			get
			{
				return this._sporteqid;
			}
			set
			{
				if ((this._sporteqid != value))
				{
					if (this._sport_equip.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsporteqidChanging(value);
					this.SendPropertyChanging();
					this._sporteqid = value;
					this.SendPropertyChanged("sporteqid");
					this.OnsporteqidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventid", DbType="Int NOT NULL")]
		public int eventid
		{
			get
			{
				return this._eventid;
			}
			set
			{
				if ((this._eventid != value))
				{
					if (this._event_register.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OneventidChanging(value);
					this.SendPropertyChanging();
					this._eventid = value;
					this.SendPropertyChanged("eventid");
					this.OneventidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sp_return", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string sp_return
		{
			get
			{
				return this._sp_return;
			}
			set
			{
				if ((this._sp_return != value))
				{
					this.Onsp_returnChanging(value);
					this.SendPropertyChanging();
					this._sp_return = value;
					this.SendPropertyChanged("sp_return");
					this.Onsp_returnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="event_register_e_sport_equip", Storage="_event_register", ThisKey="eventid", OtherKey="eventid", IsForeignKey=true)]
		public event_register event_register
		{
			get
			{
				return this._event_register.Entity;
			}
			set
			{
				event_register previousValue = this._event_register.Entity;
				if (((previousValue != value) 
							|| (this._event_register.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._event_register.Entity = null;
						previousValue.e_sport_equips.Remove(this);
					}
					this._event_register.Entity = value;
					if ((value != null))
					{
						value.e_sport_equips.Add(this);
						this._eventid = value.eventid;
					}
					else
					{
						this._eventid = default(int);
					}
					this.SendPropertyChanged("event_register");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sport_equip_e_sport_equip", Storage="_sport_equip", ThisKey="sporteqid", OtherKey="sporteqid", IsForeignKey=true)]
		public sport_equip sport_equip
		{
			get
			{
				return this._sport_equip.Entity;
			}
			set
			{
				sport_equip previousValue = this._sport_equip.Entity;
				if (((previousValue != value) 
							|| (this._sport_equip.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sport_equip.Entity = null;
						previousValue.e_sport_equips.Remove(this);
					}
					this._sport_equip.Entity = value;
					if ((value != null))
					{
						value.e_sport_equips.Add(this);
						this._sporteqid = value.sporteqid;
					}
					else
					{
						this._sporteqid = default(int);
					}
					this.SendPropertyChanged("sport_equip");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.part_contact")]
	public partial class part_contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _part_contid;
		
		private int _partid;
		
		private decimal _contactno;
		
		private EntityRef<participant> _participant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpart_contidChanging(int value);
    partial void Onpart_contidChanged();
    partial void OnpartidChanging(int value);
    partial void OnpartidChanged();
    partial void OncontactnoChanging(decimal value);
    partial void OncontactnoChanged();
    #endregion
		
		public part_contact()
		{
			this._participant = default(EntityRef<participant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_part_contid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int part_contid
		{
			get
			{
				return this._part_contid;
			}
			set
			{
				if ((this._part_contid != value))
				{
					this.Onpart_contidChanging(value);
					this.SendPropertyChanging();
					this._part_contid = value;
					this.SendPropertyChanged("part_contid");
					this.Onpart_contidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partid", DbType="Int NOT NULL")]
		public int partid
		{
			get
			{
				return this._partid;
			}
			set
			{
				if ((this._partid != value))
				{
					if (this._participant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpartidChanging(value);
					this.SendPropertyChanging();
					this._partid = value;
					this.SendPropertyChanged("partid");
					this.OnpartidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactno", DbType="Decimal(18,0) NOT NULL")]
		public decimal contactno
		{
			get
			{
				return this._contactno;
			}
			set
			{
				if ((this._contactno != value))
				{
					this.OncontactnoChanging(value);
					this.SendPropertyChanging();
					this._contactno = value;
					this.SendPropertyChanged("contactno");
					this.OncontactnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="participant_part_contact", Storage="_participant", ThisKey="partid", OtherKey="partid", IsForeignKey=true)]
		public participant participant
		{
			get
			{
				return this._participant.Entity;
			}
			set
			{
				participant previousValue = this._participant.Entity;
				if (((previousValue != value) 
							|| (this._participant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._participant.Entity = null;
						previousValue.part_contacts.Remove(this);
					}
					this._participant.Entity = value;
					if ((value != null))
					{
						value.part_contacts.Add(this);
						this._partid = value.partid;
					}
					else
					{
						this._partid = default(int);
					}
					this.SendPropertyChanged("participant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.org_contact")]
	public partial class org_contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _contectid;
		
		private int _orgid;
		
		private decimal _contactno;
		
		private string _pername;
		
		private EntityRef<organization> _organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncontectidChanging(int value);
    partial void OncontectidChanged();
    partial void OnorgidChanging(int value);
    partial void OnorgidChanged();
    partial void OncontactnoChanging(decimal value);
    partial void OncontactnoChanged();
    partial void OnpernameChanging(string value);
    partial void OnpernameChanged();
    #endregion
		
		public org_contact()
		{
			this._organization = default(EntityRef<organization>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contectid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int contectid
		{
			get
			{
				return this._contectid;
			}
			set
			{
				if ((this._contectid != value))
				{
					this.OncontectidChanging(value);
					this.SendPropertyChanging();
					this._contectid = value;
					this.SendPropertyChanged("contectid");
					this.OncontectidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orgid", DbType="Int NOT NULL")]
		public int orgid
		{
			get
			{
				return this._orgid;
			}
			set
			{
				if ((this._orgid != value))
				{
					if (this._organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnorgidChanging(value);
					this.SendPropertyChanging();
					this._orgid = value;
					this.SendPropertyChanged("orgid");
					this.OnorgidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactno", DbType="Decimal(18,0) NOT NULL")]
		public decimal contactno
		{
			get
			{
				return this._contactno;
			}
			set
			{
				if ((this._contactno != value))
				{
					this.OncontactnoChanging(value);
					this.SendPropertyChanging();
					this._contactno = value;
					this.SendPropertyChanged("contactno");
					this.OncontactnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pername", DbType="VarChar(100)")]
		public string pername
		{
			get
			{
				return this._pername;
			}
			set
			{
				if ((this._pername != value))
				{
					this.OnpernameChanging(value);
					this.SendPropertyChanging();
					this._pername = value;
					this.SendPropertyChanged("pername");
					this.OnpernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="organization_org_contact", Storage="_organization", ThisKey="orgid", OtherKey="orgid", IsForeignKey=true)]
		public organization organization
		{
			get
			{
				return this._organization.Entity;
			}
			set
			{
				organization previousValue = this._organization.Entity;
				if (((previousValue != value) 
							|| (this._organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._organization.Entity = null;
						previousValue.org_contacts.Remove(this);
					}
					this._organization.Entity = value;
					if ((value != null))
					{
						value.org_contacts.Add(this);
						this._orgid = value.orgid;
					}
					else
					{
						this._orgid = default(int);
					}
					this.SendPropertyChanged("organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class spGetCategoryFromIDResult
	{
		
		private int _e_cataid;
		
		private string _e_cat_name;
		
		public spGetCategoryFromIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_cataid", DbType="Int NOT NULL")]
		public int e_cataid
		{
			get
			{
				return this._e_cataid;
			}
			set
			{
				if ((this._e_cataid != value))
				{
					this._e_cataid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_cat_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string e_cat_name
		{
			get
			{
				return this._e_cat_name;
			}
			set
			{
				if ((this._e_cat_name != value))
				{
					this._e_cat_name = value;
				}
			}
		}
	}
	
	public partial class spGetEventRegisterFromIDsResult
	{
		
		private int _eventid;
		
		private int _e_orgid;
		
		private int _e_loginid;
		
		private System.DateTime _e_currentdate;
		
		private string _e_name;
		
		private System.DateTime _e_eventdate;
		
		private string _e_orgpersonname;
		
		private decimal _e_amount;
		
		private string _e_description;
		
		private string _e_location;
		
		private bool _e_isaprove;
		
		private int _e_cataid;
		
		private System.Nullable<decimal> _EventParticipationFee;
		
		private string _e_service;
		
		public spGetEventRegisterFromIDsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventid", DbType="Int NOT NULL")]
		public int eventid
		{
			get
			{
				return this._eventid;
			}
			set
			{
				if ((this._eventid != value))
				{
					this._eventid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_orgid", DbType="Int NOT NULL")]
		public int e_orgid
		{
			get
			{
				return this._e_orgid;
			}
			set
			{
				if ((this._e_orgid != value))
				{
					this._e_orgid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_loginid", DbType="Int NOT NULL")]
		public int e_loginid
		{
			get
			{
				return this._e_loginid;
			}
			set
			{
				if ((this._e_loginid != value))
				{
					this._e_loginid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_currentdate", DbType="DateTime NOT NULL")]
		public System.DateTime e_currentdate
		{
			get
			{
				return this._e_currentdate;
			}
			set
			{
				if ((this._e_currentdate != value))
				{
					this._e_currentdate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string e_name
		{
			get
			{
				return this._e_name;
			}
			set
			{
				if ((this._e_name != value))
				{
					this._e_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_eventdate", DbType="DateTime NOT NULL")]
		public System.DateTime e_eventdate
		{
			get
			{
				return this._e_eventdate;
			}
			set
			{
				if ((this._e_eventdate != value))
				{
					this._e_eventdate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_orgpersonname", DbType="VarChar(50)")]
		public string e_orgpersonname
		{
			get
			{
				return this._e_orgpersonname;
			}
			set
			{
				if ((this._e_orgpersonname != value))
				{
					this._e_orgpersonname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal e_amount
		{
			get
			{
				return this._e_amount;
			}
			set
			{
				if ((this._e_amount != value))
				{
					this._e_amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string e_description
		{
			get
			{
				return this._e_description;
			}
			set
			{
				if ((this._e_description != value))
				{
					this._e_description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_location", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string e_location
		{
			get
			{
				return this._e_location;
			}
			set
			{
				if ((this._e_location != value))
				{
					this._e_location = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_isaprove", DbType="Bit NOT NULL")]
		public bool e_isaprove
		{
			get
			{
				return this._e_isaprove;
			}
			set
			{
				if ((this._e_isaprove != value))
				{
					this._e_isaprove = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_cataid", DbType="Int NOT NULL")]
		public int e_cataid
		{
			get
			{
				return this._e_cataid;
			}
			set
			{
				if ((this._e_cataid != value))
				{
					this._e_cataid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventParticipationFee", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> EventParticipationFee
		{
			get
			{
				return this._EventParticipationFee;
			}
			set
			{
				if ((this._EventParticipationFee != value))
				{
					this._EventParticipationFee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_service", DbType="VarChar(MAX)")]
		public string e_service
		{
			get
			{
				return this._e_service;
			}
			set
			{
				if ((this._e_service != value))
				{
					this._e_service = value;
				}
			}
		}
	}
	
	public partial class spGetJournalEntryDetailResult
	{
		
		private int _JDetailId;
		
		private int _VoucherNo;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _AccountName;
		
		private string _AccountNo;
		
		private int _JEntryId;
		
		private string _Memo;
		
		private decimal _Dr;
		
		private decimal _Cr;
		
		public spGetJournalEntryDetailResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JDetailId", DbType="Int NOT NULL")]
		public int JDetailId
		{
			get
			{
				return this._JDetailId;
			}
			set
			{
				if ((this._JDetailId != value))
				{
					this._JDetailId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherNo", DbType="Int NOT NULL")]
		public int VoucherNo
		{
			get
			{
				return this._VoucherNo;
			}
			set
			{
				if ((this._VoucherNo != value))
				{
					this._VoucherNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this._AccountName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="NChar(15) NOT NULL", CanBeNull=false)]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this._AccountNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JEntryId", DbType="Int NOT NULL")]
		public int JEntryId
		{
			get
			{
				return this._JEntryId;
			}
			set
			{
				if ((this._JEntryId != value))
				{
					this._JEntryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Memo
		{
			get
			{
				return this._Memo;
			}
			set
			{
				if ((this._Memo != value))
				{
					this._Memo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dr", DbType="Decimal(18,2) NOT NULL")]
		public decimal Dr
		{
			get
			{
				return this._Dr;
			}
			set
			{
				if ((this._Dr != value))
				{
					this._Dr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cr", DbType="Decimal(18,2) NOT NULL")]
		public decimal Cr
		{
			get
			{
				return this._Cr;
			}
			set
			{
				if ((this._Cr != value))
				{
					this._Cr = value;
				}
			}
		}
	}
	
	public partial class spGetlogincheckFromIDResult
	{
		
		private int _loginid;
		
		private int _logintypeid;
		
		private string _firstname;
		
		private string _lastname;
		
		private string _username;
		
		private string _password;
		
		private string _emailadd;
		
		private bool _Isactive;
		
		private string _gender;
		
		private string _contactno;
		
		private string _l_address;
		
		private System.Nullable<System.DateTime> _l_dob;
		
		public spGetlogincheckFromIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loginid", DbType="Int NOT NULL")]
		public int loginid
		{
			get
			{
				return this._loginid;
			}
			set
			{
				if ((this._loginid != value))
				{
					this._loginid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logintypeid", DbType="Int NOT NULL")]
		public int logintypeid
		{
			get
			{
				return this._logintypeid;
			}
			set
			{
				if ((this._logintypeid != value))
				{
					this._logintypeid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this._firstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this._lastname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this._username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this._password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailadd", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string emailadd
		{
			get
			{
				return this._emailadd;
			}
			set
			{
				if ((this._emailadd != value))
				{
					this._emailadd = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Isactive", DbType="Bit NOT NULL")]
		public bool Isactive
		{
			get
			{
				return this._Isactive;
			}
			set
			{
				if ((this._Isactive != value))
				{
					this._Isactive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(10)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this._gender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactno", DbType="VarChar(18)")]
		public string contactno
		{
			get
			{
				return this._contactno;
			}
			set
			{
				if ((this._contactno != value))
				{
					this._contactno = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_l_address", DbType="VarChar(100)")]
		public string l_address
		{
			get
			{
				return this._l_address;
			}
			set
			{
				if ((this._l_address != value))
				{
					this._l_address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_l_dob", DbType="Date")]
		public System.Nullable<System.DateTime> l_dob
		{
			get
			{
				return this._l_dob;
			}
			set
			{
				if ((this._l_dob != value))
				{
					this._l_dob = value;
				}
			}
		}
	}
	
	public partial class spGetloginFromIDResult
	{
		
		private int _loginid;
		
		private int _logintypeid;
		
		private string _firstname;
		
		private string _lastname;
		
		private string _username;
		
		private string _password;
		
		private string _emailadd;
		
		private bool _Isactive;
		
		private string _gender;
		
		private string _contactno;
		
		private string _l_address;
		
		private System.Nullable<System.DateTime> _l_dob;
		
		public spGetloginFromIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loginid", DbType="Int NOT NULL")]
		public int loginid
		{
			get
			{
				return this._loginid;
			}
			set
			{
				if ((this._loginid != value))
				{
					this._loginid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logintypeid", DbType="Int NOT NULL")]
		public int logintypeid
		{
			get
			{
				return this._logintypeid;
			}
			set
			{
				if ((this._logintypeid != value))
				{
					this._logintypeid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this._firstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this._lastname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this._username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this._password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailadd", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string emailadd
		{
			get
			{
				return this._emailadd;
			}
			set
			{
				if ((this._emailadd != value))
				{
					this._emailadd = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Isactive", DbType="Bit NOT NULL")]
		public bool Isactive
		{
			get
			{
				return this._Isactive;
			}
			set
			{
				if ((this._Isactive != value))
				{
					this._Isactive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(10)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this._gender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactno", DbType="VarChar(18)")]
		public string contactno
		{
			get
			{
				return this._contactno;
			}
			set
			{
				if ((this._contactno != value))
				{
					this._contactno = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_l_address", DbType="VarChar(100)")]
		public string l_address
		{
			get
			{
				return this._l_address;
			}
			set
			{
				if ((this._l_address != value))
				{
					this._l_address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_l_dob", DbType="Date")]
		public System.Nullable<System.DateTime> l_dob
		{
			get
			{
				return this._l_dob;
			}
			set
			{
				if ((this._l_dob != value))
				{
					this._l_dob = value;
				}
			}
		}
	}
	
	public partial class spGetlogintypeFromIDResult
	{
		
		private int _logintypeid;
		
		private string _typename;
		
		public spGetlogintypeFromIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logintypeid", DbType="Int NOT NULL")]
		public int logintypeid
		{
			get
			{
				return this._logintypeid;
			}
			set
			{
				if ((this._logintypeid != value))
				{
					this._logintypeid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typename", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string typename
		{
			get
			{
				return this._typename;
			}
			set
			{
				if ((this._typename != value))
				{
					this._typename = value;
				}
			}
		}
	}
	
	public partial class spGetOrganizationFromIDsResult
	{
		
		private int _orgid;
		
		private string _org_name;
		
		public spGetOrganizationFromIDsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orgid", DbType="Int NOT NULL")]
		public int orgid
		{
			get
			{
				return this._orgid;
			}
			set
			{
				if ((this._orgid != value))
				{
					this._orgid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_org_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string org_name
		{
			get
			{
				return this._org_name;
			}
			set
			{
				if ((this._org_name != value))
				{
					this._org_name = value;
				}
			}
		}
	}
	
	public partial class spGetorgcontactFromIDResult
	{
		
		private int _contactno;
		
		private int _contectid;
		
		private int _orgid;
		
		public spGetorgcontactFromIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactno", DbType="Int NOT NULL")]
		public int contactno
		{
			get
			{
				return this._contactno;
			}
			set
			{
				if ((this._contactno != value))
				{
					this._contactno = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contectid", DbType="Int NOT NULL")]
		public int contectid
		{
			get
			{
				return this._contectid;
			}
			set
			{
				if ((this._contectid != value))
				{
					this._contectid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orgid", DbType="Int NOT NULL")]
		public int orgid
		{
			get
			{
				return this._orgid;
			}
			set
			{
				if ((this._orgid != value))
				{
					this._orgid = value;
				}
			}
		}
	}
	
	public partial class spGetpassacessFromIDResult
	{
		
		private int _logintypeid;
		
		private int _p_acessid;
		
		private int _pageid;
		
		public spGetpassacessFromIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logintypeid", DbType="Int NOT NULL")]
		public int logintypeid
		{
			get
			{
				return this._logintypeid;
			}
			set
			{
				if ((this._logintypeid != value))
				{
					this._logintypeid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_acessid", DbType="Int NOT NULL")]
		public int p_acessid
		{
			get
			{
				return this._p_acessid;
			}
			set
			{
				if ((this._p_acessid != value))
				{
					this._p_acessid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pageid", DbType="Int NOT NULL")]
		public int pageid
		{
			get
			{
				return this._pageid;
			}
			set
			{
				if ((this._pageid != value))
				{
					this._pageid = value;
				}
			}
		}
	}
	
	public partial class spGetpagesFromIDResult
	{
		
		private int _pageid;
		
		private string _pagename;
		
		public spGetpagesFromIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pageid", DbType="Int NOT NULL")]
		public int pageid
		{
			get
			{
				return this._pageid;
			}
			set
			{
				if ((this._pageid != value))
				{
					this._pageid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pagename", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string pagename
		{
			get
			{
				return this._pagename;
			}
			set
			{
				if ((this._pagename != value))
				{
					this._pagename = value;
				}
			}
		}
	}
	
	public partial class spGetPerticipentFromIDsResult
	{
		
		private int _partid;
		
		private string _p_first_name;
		
		private string _p_address;
		
		private System.Nullable<System.DateTime> _p_dob;
		
		private string _p_email;
		
		private string _p_gender;
		
		private string _p_last_name;
		
		private string _p_middle_name;
		
		public spGetPerticipentFromIDsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partid", DbType="Int NOT NULL")]
		public int partid
		{
			get
			{
				return this._partid;
			}
			set
			{
				if ((this._partid != value))
				{
					this._partid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_first_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string p_first_name
		{
			get
			{
				return this._p_first_name;
			}
			set
			{
				if ((this._p_first_name != value))
				{
					this._p_first_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_address", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string p_address
		{
			get
			{
				return this._p_address;
			}
			set
			{
				if ((this._p_address != value))
				{
					this._p_address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_dob", DbType="Date")]
		public System.Nullable<System.DateTime> p_dob
		{
			get
			{
				return this._p_dob;
			}
			set
			{
				if ((this._p_dob != value))
				{
					this._p_dob = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string p_email
		{
			get
			{
				return this._p_email;
			}
			set
			{
				if ((this._p_email != value))
				{
					this._p_email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_gender", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string p_gender
		{
			get
			{
				return this._p_gender;
			}
			set
			{
				if ((this._p_gender != value))
				{
					this._p_gender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_last_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string p_last_name
		{
			get
			{
				return this._p_last_name;
			}
			set
			{
				if ((this._p_last_name != value))
				{
					this._p_last_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_p_middle_name", DbType="VarChar(50)")]
		public string p_middle_name
		{
			get
			{
				return this._p_middle_name;
			}
			set
			{
				if ((this._p_middle_name != value))
				{
					this._p_middle_name = value;
				}
			}
		}
	}
	
	public partial class spGetSporteqFromIDResult
	{
		
		private int _sporteqid;
		
		private string _eq_name;
		
		private int _t_quantity;
		
		public spGetSporteqFromIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sporteqid", DbType="Int NOT NULL")]
		public int sporteqid
		{
			get
			{
				return this._sporteqid;
			}
			set
			{
				if ((this._sporteqid != value))
				{
					this._sporteqid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eq_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string eq_name
		{
			get
			{
				return this._eq_name;
			}
			set
			{
				if ((this._eq_name != value))
				{
					this._eq_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_t_quantity", DbType="Int NOT NULL")]
		public int t_quantity
		{
			get
			{
				return this._t_quantity;
			}
			set
			{
				if ((this._t_quantity != value))
				{
					this._t_quantity = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
